#pragma once
#include <iostream>
#include <stdio.h>
#include <chrono>
#include<thread>
#include<vector>

// To compile libraries, go to project propertiesand under C / C++  Code Generation you will find Runtime Library option.You need to change it from Multi - threaded DLL(/ MD) to Multi - threaded(/ MT).
#include <opencv2/core.hpp>
#include <opencv2/imgcodecs.hpp>
#include <opencv2/highgui.hpp>
#define VCL_NAMESPACE vcl
#define MAX_VECTDOR_SIZE 256
#include "vectorclass.h"

// define this to use floats instead of doubles
    //#define USE_FLOAT
// define colormap: (default: grayscale)
    //#define VIRIDIS 
    //#define GIST_RAINBOW 
    #define HOT 
    //#define PLASMA 

#ifndef USE_FLOAT
#define NUMBER double
#define VECD vcl::Vec4d
#define VECI vcl::Vec4q
#define VECDB vcl::Vec4db
#define VECIB vcl::Vec4qb
#define INT long long int
#define SIZE 4
#else
#define NUMBER float
#define VECD vcl::Vec8f
#define VECI vcl::Vec8i
#define VECDB vcl::Vec8fb
#define VECIB vcl::Vec8ib
#define INT int
#define SIZE 8
#endif

#define BYTE unsigned char
#define S 1
#define MS 2
#define US 3
#define NS 4
const int FILE_HEADER_SIZE = 14;
const int INFO_HEADER_SIZE = 40;

using namespace std;

// class to measure time with chrono library in sec, ms, us, or ns
class Measure
{
    chrono::steady_clock::time_point begin;
public:
    Measure()
    {
        begin = chrono::steady_clock::now();
    }
    void start()
    {
        begin = chrono::steady_clock::now();
    }
    auto stop(int mode = MS)
    {
        chrono::steady_clock::time_point end;
        end = chrono::steady_clock::now();
        switch (mode)
        {
        case S:
            return chrono::duration_cast<chrono::seconds>(end - begin).count();
            break;
        case MS:
            return chrono::duration_cast<chrono::milliseconds>(end - begin).count();
            break;
        case US:
            return chrono::duration_cast<chrono::microseconds>(end - begin).count();
            break;
        case NS:
            return chrono::duration_cast<chrono::nanoseconds>(end - begin).count();
            break;
        default:
            return (long long int) - 1;
        }
    }
};

// functions to save a 1D BYTE* array as bitmap image. not used since the implementation of openCV
/*
BYTE* createBitmapFileHeader(int height, int stride)
{
    int fileSize = FILE_HEADER_SIZE + INFO_HEADER_SIZE + (stride * height);

    static BYTE fileHeader[] = {
        0,0,     /// signature
        0,0,0,0, /// image file size in bytes
        0,0,0,0, /// reserved
        0,0,0,0, /// start of pixel array
    };

    fileHeader[0] = (BYTE)('B');
    fileHeader[1] = (BYTE)('M');
    fileHeader[2] = (BYTE)(fileSize);
    fileHeader[3] = (BYTE)(fileSize >> 8);
    fileHeader[4] = (BYTE)(fileSize >> 16);
    fileHeader[5] = (BYTE)(fileSize >> 24);
    fileHeader[10] = (BYTE)(FILE_HEADER_SIZE + INFO_HEADER_SIZE);

    return fileHeader;
}

BYTE* createBitmapInfoHeader(int height, int width)
{
    static BYTE infoHeader[] = {
        0,0,0,0, /// header size
        0,0,0,0, /// image width
        0,0,0,0, /// image height
        0,0,     /// number of color planes
        0,0,     /// bits per pixel
        0,0,0,0, /// compression
        0,0,0,0, /// image size
        0,0,0,0, /// horizontal resolution
        0,0,0,0, /// vertical resolution
        0,0,0,0, /// colors in color table
        0,0,0,0, /// important color count
    };

    infoHeader[0] = (BYTE)(INFO_HEADER_SIZE);
    infoHeader[4] = (BYTE)(width);
    infoHeader[5] = (BYTE)(width >> 8);
    infoHeader[6] = (BYTE)(width >> 16);
    infoHeader[7] = (BYTE)(width >> 24);
    infoHeader[8] = (BYTE)(height);
    infoHeader[9] = (BYTE)(height >> 8);
    infoHeader[10] = (BYTE)(height >> 16);
    infoHeader[11] = (BYTE)(height >> 24);
    infoHeader[12] = (BYTE)(1);
    infoHeader[14] = (BYTE)(3 * 8);

    return infoHeader;
}

void generateBitmapImage(BYTE* image, int height, int width, char* imageFileName)
{
    int widthInBytes = width * 3;

    BYTE padding[3] = { 0, 0, 0 };
    int paddingSize = (4 - (widthInBytes) % 4) % 4;

    int stride = (widthInBytes)+paddingSize;

    FILE* imageFile;
    fopen_s(&imageFile, imageFileName, "wb");
    if (imageFile == NULL)
        printf("failed to save image\n");
    else
    {
        BYTE* fileHeader = createBitmapFileHeader(height, stride);
        fwrite(fileHeader, 1, FILE_HEADER_SIZE, imageFile);

        BYTE* infoHeader = createBitmapInfoHeader(height, width);
        fwrite(infoHeader, 1, INFO_HEADER_SIZE, imageFile);

        for (int i = 0; i < height; i++)
        {
            fwrite(image + (3 * i * width), 3, width, imageFile);
            fwrite(padding, 1, paddingSize, imageFile);
        }

        fclose(imageFile);
    }
}
/**/

// colormaps (generated with python)
#ifdef VIRIDIS
const cv::Vec3b colormap[257] =
{
    cv::Vec3b(98, 15, 71),
    cv::Vec3b(98, 15, 71),
    cv::Vec3b(98, 15, 71),
    cv::Vec3b(98, 15, 71),
    cv::Vec3b(98, 15, 71),
    cv::Vec3b(98, 15, 71),
    cv::Vec3b(99, 17, 71),
    cv::Vec3b(99, 17, 71),
    cv::Vec3b(99, 17, 71),
    cv::Vec3b(99, 17, 71),
    cv::Vec3b(99, 17, 71),
    cv::Vec3b(99, 17, 71),
    cv::Vec3b(99, 17, 71),
    cv::Vec3b(101, 18, 71),
    cv::Vec3b(101, 18, 71),
    cv::Vec3b(101, 18, 71),
    cv::Vec3b(101, 18, 71),
    cv::Vec3b(102, 20, 71),
    cv::Vec3b(102, 20, 71),
    cv::Vec3b(102, 20, 71),
    cv::Vec3b(103, 21, 71),
    cv::Vec3b(103, 21, 71),
    cv::Vec3b(103, 21, 71),
    cv::Vec3b(103, 21, 71),
    cv::Vec3b(105, 22, 71),
    cv::Vec3b(105, 22, 71),
    cv::Vec3b(106, 24, 71),
    cv::Vec3b(106, 24, 71),
    cv::Vec3b(106, 24, 71),
    cv::Vec3b(107, 25, 72),
    cv::Vec3b(107, 25, 72),
    cv::Vec3b(108, 26, 72),
    cv::Vec3b(108, 26, 72),
    cv::Vec3b(110, 28, 72),
    cv::Vec3b(110, 28, 72),
    cv::Vec3b(111, 29, 72),
    cv::Vec3b(111, 29, 72),
    cv::Vec3b(112, 30, 72),
    cv::Vec3b(113, 32, 72),
    cv::Vec3b(113, 32, 72),
    cv::Vec3b(114, 33, 72),
    cv::Vec3b(114, 33, 72),
    cv::Vec3b(115, 34, 72),
    cv::Vec3b(116, 35, 72),
    cv::Vec3b(117, 37, 71),
    cv::Vec3b(117, 37, 71),
    cv::Vec3b(118, 38, 71),
    cv::Vec3b(118, 38, 71),
    cv::Vec3b(119, 39, 71),
    cv::Vec3b(120, 40, 71),
    cv::Vec3b(121, 42, 71),
    cv::Vec3b(122, 43, 71),
    cv::Vec3b(123, 44, 71),
    cv::Vec3b(124, 45, 70),
    cv::Vec3b(124, 45, 70),
    cv::Vec3b(124, 47, 70),
    cv::Vec3b(125, 48, 70),
    cv::Vec3b(126, 49, 70),
    cv::Vec3b(127, 50, 69),
    cv::Vec3b(127, 52, 69),
    cv::Vec3b(128, 53, 69),
    cv::Vec3b(128, 53, 69),
    cv::Vec3b(129, 54, 69),
    cv::Vec3b(129, 55, 68),
    cv::Vec3b(131, 58, 67),
    cv::Vec3b(131, 59, 67),
    cv::Vec3b(132, 60, 67),
    cv::Vec3b(132, 61, 66),
    cv::Vec3b(132, 61, 66),
    cv::Vec3b(133, 62, 66),
    cv::Vec3b(133, 64, 66),
    cv::Vec3b(134, 66, 65),
    cv::Vec3b(135, 67, 64),
    cv::Vec3b(135, 68, 64),
    cv::Vec3b(135, 68, 64),
    cv::Vec3b(136, 71, 63),
    cv::Vec3b(136, 72, 62),
    cv::Vec3b(137, 74, 61),
    cv::Vec3b(137, 75, 61),
    cv::Vec3b(137, 76, 61),
    cv::Vec3b(138, 78, 60),
    cv::Vec3b(138, 78, 60),
    cv::Vec3b(138, 80, 59),
    cv::Vec3b(139, 82, 58),
    cv::Vec3b(139, 84, 57),
    cv::Vec3b(139, 85, 57),
    cv::Vec3b(139, 86, 56),
    cv::Vec3b(140, 88, 55),
    cv::Vec3b(140, 88, 55),
    cv::Vec3b(140, 89, 55),
    cv::Vec3b(140, 91, 54),
    cv::Vec3b(140, 93, 53),
    cv::Vec3b(141, 94, 52),
    cv::Vec3b(141, 95, 52),
    cv::Vec3b(141, 95, 52),
    cv::Vec3b(141, 97, 51),
    cv::Vec3b(141, 99, 50),
    cv::Vec3b(141, 100, 49),
    cv::Vec3b(141, 102, 49),
    cv::Vec3b(141, 104, 48),
    cv::Vec3b(141, 105, 47),
    cv::Vec3b(141, 105, 47),
    cv::Vec3b(142, 107, 46),
    cv::Vec3b(142, 109, 46),
    cv::Vec3b(142, 111, 45),
    cv::Vec3b(142, 112, 44),
    cv::Vec3b(142, 114, 44),
    cv::Vec3b(142, 116, 43),
    cv::Vec3b(142, 116, 43),
    cv::Vec3b(142, 117, 42),
    cv::Vec3b(142, 119, 42),
    cv::Vec3b(142, 121, 41),
    cv::Vec3b(142, 122, 40),
    cv::Vec3b(142, 123, 40),
    cv::Vec3b(142, 125, 39),
    cv::Vec3b(142, 125, 39),
    cv::Vec3b(142, 127, 38),
    cv::Vec3b(142, 128, 38),
    cv::Vec3b(142, 130, 37),
    cv::Vec3b(141, 132, 36),
    cv::Vec3b(141, 133, 36),
    cv::Vec3b(141, 133, 36),
    cv::Vec3b(141, 136, 35),
    cv::Vec3b(141, 137, 35),
    cv::Vec3b(141, 138, 34),
    cv::Vec3b(141, 140, 33),
    cv::Vec3b(140, 141, 33),
    cv::Vec3b(140, 143, 32),
    cv::Vec3b(140, 143, 32),
    cv::Vec3b(140, 145, 32),
    cv::Vec3b(139, 147, 31),
    cv::Vec3b(139, 149, 31),
    cv::Vec3b(139, 150, 31),
    cv::Vec3b(138, 152, 30),
    cv::Vec3b(138, 153, 30),
    cv::Vec3b(138, 153, 30),
    cv::Vec3b(137, 154, 30),
    cv::Vec3b(137, 156, 30),
    cv::Vec3b(136, 158, 30),
    cv::Vec3b(135, 160, 30),
    cv::Vec3b(135, 161, 31),
    cv::Vec3b(135, 161, 31),
    cv::Vec3b(134, 163, 31),
    cv::Vec3b(133, 165, 32),
    cv::Vec3b(133, 166, 33),
    cv::Vec3b(131, 168, 35),
    cv::Vec3b(130, 169, 35),
    cv::Vec3b(130, 170, 36),
    cv::Vec3b(130, 170, 36),
    cv::Vec3b(128, 173, 39),
    cv::Vec3b(127, 174, 40),
    cv::Vec3b(127, 175, 41),
    cv::Vec3b(125, 177, 44),
    cv::Vec3b(124, 178, 46),
    cv::Vec3b(122, 180, 48),
    cv::Vec3b(122, 180, 48),
    cv::Vec3b(121, 182, 51),
    cv::Vec3b(120, 183, 53),
    cv::Vec3b(118, 185, 56),
    cv::Vec3b(118, 185, 57),
    cv::Vec3b(116, 187, 61),
    cv::Vec3b(114, 189, 64),
    cv::Vec3b(114, 189, 64),
    cv::Vec3b(113, 190, 66),
    cv::Vec3b(111, 191, 69),
    cv::Vec3b(109, 193, 73),
    cv::Vec3b(108, 194, 75),
    cv::Vec3b(107, 194, 77),
    cv::Vec3b(107, 194, 77),
    cv::Vec3b(104, 196, 81),
    cv::Vec3b(103, 197, 83),
    cv::Vec3b(101, 198, 87),
    cv::Vec3b(98, 200, 91),
    cv::Vec3b(97, 201, 94),
    cv::Vec3b(96, 201, 96),
    cv::Vec3b(96, 201, 96),
    cv::Vec3b(93, 203, 100),
    cv::Vec3b(92, 204, 103),
    cv::Vec3b(91, 204, 105),
    cv::Vec3b(88, 206, 109),
    cv::Vec3b(86, 206, 112),
    cv::Vec3b(84, 208, 116),
    cv::Vec3b(84, 208, 116),
    cv::Vec3b(82, 208, 119),
    cv::Vec3b(81, 209, 121),
    cv::Vec3b(78, 210, 126),
    cv::Vec3b(76, 211, 129),
    cv::Vec3b(75, 211, 131),
    cv::Vec3b(75, 211, 131),
    cv::Vec3b(71, 213, 136),
    cv::Vec3b(70, 213, 139),
    cv::Vec3b(68, 214, 141),
    cv::Vec3b(67, 214, 144),
    cv::Vec3b(65, 215, 146),
    cv::Vec3b(63, 215, 149),
    cv::Vec3b(63, 215, 149),
    cv::Vec3b(60, 216, 154),
    cv::Vec3b(58, 217, 157),
    cv::Vec3b(56, 217, 159),
    cv::Vec3b(55, 218, 162),
    cv::Vec3b(53, 218, 165),
    cv::Vec3b(51, 219, 167),
    cv::Vec3b(51, 219, 167),
    cv::Vec3b(50, 219, 170),
    cv::Vec3b(48, 220, 173),
    cv::Vec3b(46, 220, 175),
    cv::Vec3b(44, 221, 178),
    cv::Vec3b(44, 221, 178),
    cv::Vec3b(41, 221, 183),
    cv::Vec3b(41, 221, 183),
    cv::Vec3b(41, 221, 183),
    cv::Vec3b(39, 222, 186),
    cv::Vec3b(38, 222, 189),
    cv::Vec3b(36, 223, 191),
    cv::Vec3b(36, 223, 191),
    cv::Vec3b(36, 223, 191),
    cv::Vec3b(34, 223, 194),
    cv::Vec3b(33, 223, 197),
    cv::Vec3b(31, 224, 199),
    cv::Vec3b(31, 224, 199),
    cv::Vec3b(30, 224, 202),
    cv::Vec3b(29, 224, 205),
    cv::Vec3b(29, 224, 205),
    cv::Vec3b(29, 224, 205),
    cv::Vec3b(28, 225, 207),
    cv::Vec3b(28, 225, 207),
    cv::Vec3b(27, 225, 210),
    cv::Vec3b(27, 225, 210),
    cv::Vec3b(26, 225, 212),
    cv::Vec3b(26, 225, 212),
    cv::Vec3b(25, 226, 215),
    cv::Vec3b(25, 226, 215),
    cv::Vec3b(24, 226, 218),
    cv::Vec3b(24, 226, 218),
    cv::Vec3b(24, 226, 218),
    cv::Vec3b(24, 226, 218),
    cv::Vec3b(24, 226, 220),
    cv::Vec3b(24, 226, 220),
    cv::Vec3b(24, 226, 220),
    cv::Vec3b(24, 227, 223),
    cv::Vec3b(24, 227, 223),
    cv::Vec3b(24, 227, 223),
    cv::Vec3b(24, 227, 223),
    cv::Vec3b(24, 227, 225),
    cv::Vec3b(24, 227, 225),
    cv::Vec3b(24, 227, 225),
    cv::Vec3b(24, 227, 225),
    cv::Vec3b(24, 227, 225),
    cv::Vec3b(24, 227, 225),
    cv::Vec3b(24, 227, 225),
    cv::Vec3b(24, 227, 228),
    cv::Vec3b(24, 227, 228),
    cv::Vec3b(24, 227, 228),
    cv::Vec3b(24, 227, 228),
    cv::Vec3b(24, 227, 228),
    cv::Vec3b(24, 227, 228),
    cv::Vec3b(0, 0, 0)
};
#elif defined GIST_RAINBOW
const cv::Vec3b colormap[257] =
{
    cv::Vec3b(0, 12, 255),
    cv::Vec3b(0, 12, 255),
    cv::Vec3b(0, 12, 255),
    cv::Vec3b(0, 12, 255),
    cv::Vec3b(0, 12, 255),
    cv::Vec3b(0, 12, 255),
    cv::Vec3b(0, 18, 255),
    cv::Vec3b(0, 18, 255),
    cv::Vec3b(0, 18, 255),
    cv::Vec3b(0, 18, 255),
    cv::Vec3b(0, 18, 255),
    cv::Vec3b(0, 18, 255),
    cv::Vec3b(0, 18, 255),
    cv::Vec3b(0, 23, 255),
    cv::Vec3b(0, 23, 255),
    cv::Vec3b(0, 23, 255),
    cv::Vec3b(0, 23, 255),
    cv::Vec3b(0, 28, 255),
    cv::Vec3b(0, 28, 255),
    cv::Vec3b(0, 28, 255),
    cv::Vec3b(0, 34, 255),
    cv::Vec3b(0, 34, 255),
    cv::Vec3b(0, 34, 255),
    cv::Vec3b(0, 34, 255),
    cv::Vec3b(0, 39, 255),
    cv::Vec3b(0, 39, 255),
    cv::Vec3b(0, 45, 255),
    cv::Vec3b(0, 45, 255),
    cv::Vec3b(0, 45, 255),
    cv::Vec3b(0, 50, 255),
    cv::Vec3b(0, 50, 255),
    cv::Vec3b(0, 55, 255),
    cv::Vec3b(0, 55, 255),
    cv::Vec3b(0, 61, 255),
    cv::Vec3b(0, 61, 255),
    cv::Vec3b(0, 66, 255),
    cv::Vec3b(0, 66, 255),
    cv::Vec3b(0, 72, 255),
    cv::Vec3b(0, 77, 255),
    cv::Vec3b(0, 77, 255),
    cv::Vec3b(0, 82, 255),
    cv::Vec3b(0, 82, 255),
    cv::Vec3b(0, 88, 255),
    cv::Vec3b(0, 93, 255),
    cv::Vec3b(0, 99, 255),
    cv::Vec3b(0, 99, 255),
    cv::Vec3b(0, 104, 255),
    cv::Vec3b(0, 104, 255),
    cv::Vec3b(0, 110, 255),
    cv::Vec3b(0, 115, 255),
    cv::Vec3b(0, 120, 255),
    cv::Vec3b(0, 126, 255),
    cv::Vec3b(0, 131, 255),
    cv::Vec3b(0, 137, 255),
    cv::Vec3b(0, 137, 255),
    cv::Vec3b(0, 142, 255),
    cv::Vec3b(0, 147, 255),
    cv::Vec3b(0, 153, 255),
    cv::Vec3b(0, 158, 255),
    cv::Vec3b(0, 164, 255),
    cv::Vec3b(0, 169, 255),
    cv::Vec3b(0, 169, 255),
    cv::Vec3b(0, 174, 255),
    cv::Vec3b(0, 180, 255),
    cv::Vec3b(0, 191, 255),
    cv::Vec3b(0, 196, 255),
    cv::Vec3b(0, 201, 255),
    cv::Vec3b(0, 207, 255),
    cv::Vec3b(0, 207, 255),
    cv::Vec3b(0, 212, 255),
    cv::Vec3b(0, 218, 255),
    cv::Vec3b(0, 228, 255),
    cv::Vec3b(0, 234, 255),
    cv::Vec3b(0, 239, 255),
    cv::Vec3b(0, 239, 255),
    cv::Vec3b(0, 250, 255),
    cv::Vec3b(0, 255, 254),
    cv::Vec3b(0, 255, 243),
    cv::Vec3b(0, 255, 237),
    cv::Vec3b(0, 255, 232),
    cv::Vec3b(0, 255, 221),
    cv::Vec3b(0, 255, 221),
    cv::Vec3b(0, 255, 216),
    cv::Vec3b(0, 255, 205),
    cv::Vec3b(0, 255, 194),
    cv::Vec3b(0, 255, 189),
    cv::Vec3b(0, 255, 183),
    cv::Vec3b(0, 255, 172),
    cv::Vec3b(0, 255, 172),
    cv::Vec3b(0, 255, 167),
    cv::Vec3b(0, 255, 156),
    cv::Vec3b(0, 255, 145),
    cv::Vec3b(0, 255, 140),
    cv::Vec3b(0, 255, 135),
    cv::Vec3b(0, 255, 135),
    cv::Vec3b(0, 255, 124),
    cv::Vec3b(0, 255, 113),
    cv::Vec3b(0, 255, 108),
    cv::Vec3b(0, 255, 97),
    cv::Vec3b(0, 255, 86),
    cv::Vec3b(0, 255, 81),
    cv::Vec3b(0, 255, 81),
    cv::Vec3b(0, 255, 70),
    cv::Vec3b(0, 255, 59),
    cv::Vec3b(0, 255, 48),
    cv::Vec3b(0, 255, 43),
    cv::Vec3b(0, 255, 32),
    cv::Vec3b(0, 255, 21),
    cv::Vec3b(0, 255, 21),
    cv::Vec3b(0, 255, 16),
    cv::Vec3b(0, 255, 5),
    cv::Vec3b(5, 255, 0),
    cv::Vec3b(10, 255, 0),
    cv::Vec3b(21, 255, 0),
    cv::Vec3b(32, 255, 0),
    cv::Vec3b(32, 255, 0),
    cv::Vec3b(43, 255, 0),
    cv::Vec3b(48, 255, 0),
    cv::Vec3b(59, 255, 0),
    cv::Vec3b(69, 255, 0),
    cv::Vec3b(75, 255, 0),
    cv::Vec3b(75, 255, 0),
    cv::Vec3b(91, 255, 0),
    cv::Vec3b(96, 255, 0),
    cv::Vec3b(107, 255, 0),
    cv::Vec3b(118, 255, 0),
    cv::Vec3b(123, 255, 0),
    cv::Vec3b(134, 255, 0),
    cv::Vec3b(134, 255, 0),
    cv::Vec3b(145, 255, 0),
    cv::Vec3b(155, 255, 0),
    cv::Vec3b(166, 255, 0),
    cv::Vec3b(172, 255, 0),
    cv::Vec3b(182, 255, 0),
    cv::Vec3b(193, 255, 0),
    cv::Vec3b(193, 255, 0),
    cv::Vec3b(198, 255, 0),
    cv::Vec3b(209, 255, 0),
    cv::Vec3b(220, 255, 0),
    cv::Vec3b(231, 255, 0),
    cv::Vec3b(236, 255, 0),
    cv::Vec3b(236, 255, 0),
    cv::Vec3b(247, 255, 0),
    cv::Vec3b(255, 251, 0),
    cv::Vec3b(255, 246, 0),
    cv::Vec3b(255, 230, 0),
    cv::Vec3b(255, 224, 0),
    cv::Vec3b(255, 219, 0),
    cv::Vec3b(255, 219, 0),
    cv::Vec3b(255, 202, 0),
    cv::Vec3b(255, 197, 0),
    cv::Vec3b(255, 192, 0),
    cv::Vec3b(255, 175, 0),
    cv::Vec3b(255, 170, 0),
    cv::Vec3b(255, 159, 0),
    cv::Vec3b(255, 159, 0),
    cv::Vec3b(255, 148, 0),
    cv::Vec3b(255, 143, 0),
    cv::Vec3b(255, 132, 0),
    cv::Vec3b(255, 126, 0),
    cv::Vec3b(255, 116, 0),
    cv::Vec3b(255, 105, 0),
    cv::Vec3b(255, 105, 0),
    cv::Vec3b(255, 99, 0),
    cv::Vec3b(255, 88, 0),
    cv::Vec3b(255, 77, 0),
    cv::Vec3b(255, 72, 0),
    cv::Vec3b(255, 67, 0),
    cv::Vec3b(255, 67, 0),
    cv::Vec3b(255, 56, 0),
    cv::Vec3b(255, 50, 0),
    cv::Vec3b(255, 39, 0),
    cv::Vec3b(255, 29, 0),
    cv::Vec3b(255, 23, 0),
    cv::Vec3b(255, 18, 0),
    cv::Vec3b(255, 18, 0),
    cv::Vec3b(255, 7, 0),
    cv::Vec3b(255, 1, 0),
    cv::Vec3b(255, 0, 3),
    cv::Vec3b(255, 0, 14),
    cv::Vec3b(255, 0, 19),
    cv::Vec3b(255, 0, 30),
    cv::Vec3b(255, 0, 30),
    cv::Vec3b(255, 0, 36),
    cv::Vec3b(255, 0, 41),
    cv::Vec3b(255, 0, 52),
    cv::Vec3b(255, 0, 57),
    cv::Vec3b(255, 0, 63),
    cv::Vec3b(255, 0, 63),
    cv::Vec3b(255, 0, 74),
    cv::Vec3b(255, 0, 79),
    cv::Vec3b(255, 0, 85),
    cv::Vec3b(255, 0, 90),
    cv::Vec3b(255, 0, 95),
    cv::Vec3b(255, 0, 101),
    cv::Vec3b(255, 0, 101),
    cv::Vec3b(255, 0, 112),
    cv::Vec3b(255, 0, 117),
    cv::Vec3b(255, 0, 123),
    cv::Vec3b(255, 0, 128),
    cv::Vec3b(255, 0, 133),
    cv::Vec3b(255, 0, 139),
    cv::Vec3b(255, 0, 139),
    cv::Vec3b(255, 0, 144),
    cv::Vec3b(255, 0, 150),
    cv::Vec3b(255, 0, 155),
    cv::Vec3b(255, 0, 161),
    cv::Vec3b(255, 0, 161),
    cv::Vec3b(255, 0, 172),
    cv::Vec3b(255, 0, 172),
    cv::Vec3b(255, 0, 172),
    cv::Vec3b(255, 0, 177),
    cv::Vec3b(255, 0, 182),
    cv::Vec3b(255, 0, 188),
    cv::Vec3b(255, 0, 188),
    cv::Vec3b(255, 0, 188),
    cv::Vec3b(255, 0, 193),
    cv::Vec3b(255, 0, 199),
    cv::Vec3b(255, 0, 204),
    cv::Vec3b(255, 0, 204),
    cv::Vec3b(255, 0, 210),
    cv::Vec3b(255, 0, 215),
    cv::Vec3b(255, 0, 215),
    cv::Vec3b(255, 0, 215),
    cv::Vec3b(255, 0, 220),
    cv::Vec3b(255, 0, 220),
    cv::Vec3b(255, 0, 226),
    cv::Vec3b(255, 0, 226),
    cv::Vec3b(255, 0, 231),
    cv::Vec3b(255, 0, 231),
    cv::Vec3b(255, 0, 237),
    cv::Vec3b(255, 0, 237),
    cv::Vec3b(255, 0, 242),
    cv::Vec3b(255, 0, 242),
    cv::Vec3b(255, 0, 242),
    cv::Vec3b(255, 0, 242),
    cv::Vec3b(255, 0, 248),
    cv::Vec3b(255, 0, 248),
    cv::Vec3b(255, 0, 248),
    cv::Vec3b(255, 0, 253),
    cv::Vec3b(255, 0, 253),
    cv::Vec3b(255, 0, 253),
    cv::Vec3b(255, 0, 253),
    cv::Vec3b(251, 0, 255),
    cv::Vec3b(251, 0, 255),
    cv::Vec3b(251, 0, 255),
    cv::Vec3b(251, 0, 255),
    cv::Vec3b(251, 0, 255),
    cv::Vec3b(251, 0, 255),
    cv::Vec3b(251, 0, 255),
    cv::Vec3b(245, 0, 255),
    cv::Vec3b(245, 0, 255),
    cv::Vec3b(245, 0, 255),
    cv::Vec3b(245, 0, 255),
    cv::Vec3b(245, 0, 255),
    cv::Vec3b(245, 0, 255),
    cv::Vec3b(0, 0, 0)
};
#elif defined HOT
const cv::Vec3b colormap[257] =
{
    cv::Vec3b(0, 0, 36),
    cv::Vec3b(0, 0, 36),
    cv::Vec3b(0, 0, 36),
    cv::Vec3b(0, 0, 36),
    cv::Vec3b(0, 0, 36),
    cv::Vec3b(0, 0, 36),
    cv::Vec3b(0, 0, 39),
    cv::Vec3b(0, 0, 39),
    cv::Vec3b(0, 0, 39),
    cv::Vec3b(0, 0, 39),
    cv::Vec3b(0, 0, 39),
    cv::Vec3b(0, 0, 39),
    cv::Vec3b(0, 0, 39),
    cv::Vec3b(0, 0, 42),
    cv::Vec3b(0, 0, 42),
    cv::Vec3b(0, 0, 42),
    cv::Vec3b(0, 0, 42),
    cv::Vec3b(0, 0, 44),
    cv::Vec3b(0, 0, 44),
    cv::Vec3b(0, 0, 44),
    cv::Vec3b(0, 0, 47),
    cv::Vec3b(0, 0, 47),
    cv::Vec3b(0, 0, 47),
    cv::Vec3b(0, 0, 47),
    cv::Vec3b(0, 0, 49),
    cv::Vec3b(0, 0, 49),
    cv::Vec3b(0, 0, 52),
    cv::Vec3b(0, 0, 52),
    cv::Vec3b(0, 0, 52),
    cv::Vec3b(0, 0, 55),
    cv::Vec3b(0, 0, 55),
    cv::Vec3b(0, 0, 57),
    cv::Vec3b(0, 0, 57),
    cv::Vec3b(0, 0, 60),
    cv::Vec3b(0, 0, 60),
    cv::Vec3b(0, 0, 63),
    cv::Vec3b(0, 0, 63),
    cv::Vec3b(0, 0, 65),
    cv::Vec3b(0, 0, 68),
    cv::Vec3b(0, 0, 68),
    cv::Vec3b(0, 0, 70),
    cv::Vec3b(0, 0, 70),
    cv::Vec3b(0, 0, 73),
    cv::Vec3b(0, 0, 76),
    cv::Vec3b(0, 0, 78),
    cv::Vec3b(0, 0, 78),
    cv::Vec3b(0, 0, 81),
    cv::Vec3b(0, 0, 81),
    cv::Vec3b(0, 0, 84),
    cv::Vec3b(0, 0, 86),
    cv::Vec3b(0, 0, 89),
    cv::Vec3b(0, 0, 91),
    cv::Vec3b(0, 0, 94),
    cv::Vec3b(0, 0, 97),
    cv::Vec3b(0, 0, 97),
    cv::Vec3b(0, 0, 99),
    cv::Vec3b(0, 0, 102),
    cv::Vec3b(0, 0, 105),
    cv::Vec3b(0, 0, 107),
    cv::Vec3b(0, 0, 110),
    cv::Vec3b(0, 0, 112),
    cv::Vec3b(0, 0, 112),
    cv::Vec3b(0, 0, 115),
    cv::Vec3b(0, 0, 118),
    cv::Vec3b(0, 0, 123),
    cv::Vec3b(0, 0, 126),
    cv::Vec3b(0, 0, 128),
    cv::Vec3b(0, 0, 131),
    cv::Vec3b(0, 0, 131),
    cv::Vec3b(0, 0, 133),
    cv::Vec3b(0, 0, 136),
    cv::Vec3b(0, 0, 141),
    cv::Vec3b(0, 0, 144),
    cv::Vec3b(0, 0, 147),
    cv::Vec3b(0, 0, 147),
    cv::Vec3b(0, 0, 152),
    cv::Vec3b(0, 0, 154),
    cv::Vec3b(0, 0, 160),
    cv::Vec3b(0, 0, 162),
    cv::Vec3b(0, 0, 165),
    cv::Vec3b(0, 0, 170),
    cv::Vec3b(0, 0, 170),
    cv::Vec3b(0, 0, 173),
    cv::Vec3b(0, 0, 178),
    cv::Vec3b(0, 0, 183),
    cv::Vec3b(0, 0, 186),
    cv::Vec3b(0, 0, 189),
    cv::Vec3b(0, 0, 194),
    cv::Vec3b(0, 0, 194),
    cv::Vec3b(0, 0, 196),
    cv::Vec3b(0, 0, 202),
    cv::Vec3b(0, 0, 207),
    cv::Vec3b(0, 0, 210),
    cv::Vec3b(0, 0, 212),
    cv::Vec3b(0, 0, 212),
    cv::Vec3b(0, 0, 217),
    cv::Vec3b(0, 0, 223),
    cv::Vec3b(0, 0, 225),
    cv::Vec3b(0, 0, 231),
    cv::Vec3b(0, 0, 236),
    cv::Vec3b(0, 0, 238),
    cv::Vec3b(0, 0, 238),
    cv::Vec3b(0, 0, 244),
    cv::Vec3b(0, 0, 249),
    cv::Vec3b(0, 0, 254),
    cv::Vec3b(0, 2, 255),
    cv::Vec3b(0, 7, 255),
    cv::Vec3b(0, 12, 255),
    cv::Vec3b(0, 12, 255),
    cv::Vec3b(0, 15, 255),
    cv::Vec3b(0, 20, 255),
    cv::Vec3b(0, 26, 255),
    cv::Vec3b(0, 28, 255),
    cv::Vec3b(0, 33, 255),
    cv::Vec3b(0, 39, 255),
    cv::Vec3b(0, 39, 255),
    cv::Vec3b(0, 44, 255),
    cv::Vec3b(0, 47, 255),
    cv::Vec3b(0, 52, 255),
    cv::Vec3b(0, 57, 255),
    cv::Vec3b(0, 60, 255),
    cv::Vec3b(0, 60, 255),
    cv::Vec3b(0, 68, 255),
    cv::Vec3b(0, 70, 255),
    cv::Vec3b(0, 75, 255),
    cv::Vec3b(0, 81, 255),
    cv::Vec3b(0, 83, 255),
    cv::Vec3b(0, 89, 255),
    cv::Vec3b(0, 89, 255),
    cv::Vec3b(0, 94, 255),
    cv::Vec3b(0, 99, 255),
    cv::Vec3b(0, 104, 255),
    cv::Vec3b(0, 107, 255),
    cv::Vec3b(0, 112, 255),
    cv::Vec3b(0, 117, 255),
    cv::Vec3b(0, 117, 255),
    cv::Vec3b(0, 120, 255),
    cv::Vec3b(0, 125, 255),
    cv::Vec3b(0, 131, 255),
    cv::Vec3b(0, 136, 255),
    cv::Vec3b(0, 138, 255),
    cv::Vec3b(0, 138, 255),
    cv::Vec3b(0, 144, 255),
    cv::Vec3b(0, 149, 255),
    cv::Vec3b(0, 151, 255),
    cv::Vec3b(0, 159, 255),
    cv::Vec3b(0, 162, 255),
    cv::Vec3b(0, 165, 255),
    cv::Vec3b(0, 165, 255),
    cv::Vec3b(0, 172, 255),
    cv::Vec3b(0, 175, 255),
    cv::Vec3b(0, 178, 255),
    cv::Vec3b(0, 186, 255),
    cv::Vec3b(0, 188, 255),
    cv::Vec3b(0, 193, 255),
    cv::Vec3b(0, 193, 255),
    cv::Vec3b(0, 199, 255),
    cv::Vec3b(0, 201, 255),
    cv::Vec3b(0, 207, 255),
    cv::Vec3b(0, 209, 255),
    cv::Vec3b(0, 214, 255),
    cv::Vec3b(0, 220, 255),
    cv::Vec3b(0, 220, 255),
    cv::Vec3b(0, 222, 255),
    cv::Vec3b(0, 228, 255),
    cv::Vec3b(0, 233, 255),
    cv::Vec3b(0, 235, 255),
    cv::Vec3b(0, 238, 255),
    cv::Vec3b(0, 238, 255),
    cv::Vec3b(0, 243, 255),
    cv::Vec3b(0, 246, 255),
    cv::Vec3b(0, 251, 255),
    cv::Vec3b(2, 255, 255),
    cv::Vec3b(6, 255, 255),
    cv::Vec3b(10, 255, 255),
    cv::Vec3b(10, 255, 255),
    cv::Vec3b(18, 255, 255),
    cv::Vec3b(22, 255, 255),
    cv::Vec3b(26, 255, 255),
    cv::Vec3b(34, 255, 255),
    cv::Vec3b(38, 255, 255),
    cv::Vec3b(46, 255, 255),
    cv::Vec3b(46, 255, 255),
    cv::Vec3b(50, 255, 255),
    cv::Vec3b(54, 255, 255),
    cv::Vec3b(62, 255, 255),
    cv::Vec3b(65, 255, 255),
    cv::Vec3b(69, 255, 255),
    cv::Vec3b(69, 255, 255),
    cv::Vec3b(77, 255, 255),
    cv::Vec3b(81, 255, 255),
    cv::Vec3b(85, 255, 255),
    cv::Vec3b(89, 255, 255),
    cv::Vec3b(93, 255, 255),
    cv::Vec3b(97, 255, 255),
    cv::Vec3b(97, 255, 255),
    cv::Vec3b(105, 255, 255),
    cv::Vec3b(109, 255, 255),
    cv::Vec3b(113, 255, 255),
    cv::Vec3b(117, 255, 255),
    cv::Vec3b(121, 255, 255),
    cv::Vec3b(125, 255, 255),
    cv::Vec3b(125, 255, 255),
    cv::Vec3b(128, 255, 255),
    cv::Vec3b(132, 255, 255),
    cv::Vec3b(136, 255, 255),
    cv::Vec3b(140, 255, 255),
    cv::Vec3b(140, 255, 255),
    cv::Vec3b(148, 255, 255),
    cv::Vec3b(148, 255, 255),
    cv::Vec3b(148, 255, 255),
    cv::Vec3b(152, 255, 255),
    cv::Vec3b(156, 255, 255),
    cv::Vec3b(160, 255, 255),
    cv::Vec3b(160, 255, 255),
    cv::Vec3b(160, 255, 255),
    cv::Vec3b(164, 255, 255),
    cv::Vec3b(168, 255, 255),
    cv::Vec3b(172, 255, 255),
    cv::Vec3b(172, 255, 255),
    cv::Vec3b(176, 255, 255),
    cv::Vec3b(180, 255, 255),
    cv::Vec3b(180, 255, 255),
    cv::Vec3b(180, 255, 255),
    cv::Vec3b(184, 255, 255),
    cv::Vec3b(184, 255, 255),
    cv::Vec3b(188, 255, 255),
    cv::Vec3b(188, 255, 255),
    cv::Vec3b(191, 255, 255),
    cv::Vec3b(191, 255, 255),
    cv::Vec3b(195, 255, 255),
    cv::Vec3b(195, 255, 255),
    cv::Vec3b(199, 255, 255),
    cv::Vec3b(199, 255, 255),
    cv::Vec3b(199, 255, 255),
    cv::Vec3b(199, 255, 255),
    cv::Vec3b(203, 255, 255),
    cv::Vec3b(203, 255, 255),
    cv::Vec3b(203, 255, 255),
    cv::Vec3b(207, 255, 255),
    cv::Vec3b(207, 255, 255),
    cv::Vec3b(207, 255, 255),
    cv::Vec3b(207, 255, 255),
    cv::Vec3b(211, 255, 255),
    cv::Vec3b(211, 255, 255),
    cv::Vec3b(211, 255, 255),
    cv::Vec3b(211, 255, 255),
    cv::Vec3b(211, 255, 255),
    cv::Vec3b(211, 255, 255),
    cv::Vec3b(211, 255, 255),
    cv::Vec3b(215, 255, 255),
    cv::Vec3b(215, 255, 255),
    cv::Vec3b(215, 255, 255),
    cv::Vec3b(215, 255, 255),
    cv::Vec3b(215, 255, 255),
    cv::Vec3b(215, 255, 255),
    cv::Vec3b(0, 0, 0)
};
#elif defined PLASMA
const cv::Vec3b colormap[257] =
{
    cv::Vec3b(145, 5, 37),
    cv::Vec3b(145, 5, 37),
    cv::Vec3b(145, 5, 37),
    cv::Vec3b(145, 5, 37),
    cv::Vec3b(145, 5, 37),
    cv::Vec3b(145, 5, 37),
    cv::Vec3b(146, 5, 39),
    cv::Vec3b(146, 5, 39),
    cv::Vec3b(146, 5, 39),
    cv::Vec3b(146, 5, 39),
    cv::Vec3b(146, 5, 39),
    cv::Vec3b(146, 5, 39),
    cv::Vec3b(146, 5, 39),
    cv::Vec3b(147, 5, 41),
    cv::Vec3b(147, 5, 41),
    cv::Vec3b(147, 5, 41),
    cv::Vec3b(147, 5, 41),
    cv::Vec3b(148, 5, 43),
    cv::Vec3b(148, 5, 43),
    cv::Vec3b(148, 5, 43),
    cv::Vec3b(148, 4, 45),
    cv::Vec3b(148, 4, 45),
    cv::Vec3b(148, 4, 45),
    cv::Vec3b(148, 4, 45),
    cv::Vec3b(149, 4, 47),
    cv::Vec3b(149, 4, 47),
    cv::Vec3b(150, 4, 49),
    cv::Vec3b(150, 4, 49),
    cv::Vec3b(150, 4, 49),
    cv::Vec3b(151, 4, 51),
    cv::Vec3b(151, 4, 51),
    cv::Vec3b(152, 4, 52),
    cv::Vec3b(152, 4, 52),
    cv::Vec3b(152, 4, 54),
    cv::Vec3b(152, 4, 54),
    cv::Vec3b(153, 4, 56),
    cv::Vec3b(153, 4, 56),
    cv::Vec3b(154, 4, 58),
    cv::Vec3b(154, 3, 59),
    cv::Vec3b(154, 3, 59),
    cv::Vec3b(155, 3, 61),
    cv::Vec3b(155, 3, 61),
    cv::Vec3b(156, 3, 63),
    cv::Vec3b(156, 3, 64),
    cv::Vec3b(157, 3, 66),
    cv::Vec3b(157, 3, 66),
    cv::Vec3b(158, 3, 68),
    cv::Vec3b(158, 3, 68),
    cv::Vec3b(158, 3, 69),
    cv::Vec3b(159, 2, 71),
    cv::Vec3b(159, 2, 73),
    cv::Vec3b(160, 2, 74),
    cv::Vec3b(161, 2, 76),
    cv::Vec3b(161, 2, 78),
    cv::Vec3b(161, 2, 78),
    cv::Vec3b(162, 2, 79),
    cv::Vec3b(162, 1, 81),
    cv::Vec3b(163, 1, 82),
    cv::Vec3b(163, 1, 84),
    cv::Vec3b(163, 1, 86),
    cv::Vec3b(164, 1, 87),
    cv::Vec3b(164, 1, 87),
    cv::Vec3b(164, 1, 89),
    cv::Vec3b(165, 0, 90),
    cv::Vec3b(165, 0, 94),
    cv::Vec3b(166, 0, 95),
    cv::Vec3b(166, 0, 97),
    cv::Vec3b(166, 0, 98),
    cv::Vec3b(166, 0, 98),
    cv::Vec3b(167, 0, 100),
    cv::Vec3b(167, 0, 101),
    cv::Vec3b(167, 0, 104),
    cv::Vec3b(167, 0, 106),
    cv::Vec3b(168, 0, 108),
    cv::Vec3b(168, 0, 108),
    cv::Vec3b(168, 0, 111),
    cv::Vec3b(168, 0, 112),
    cv::Vec3b(168, 0, 115),
    cv::Vec3b(168, 0, 117),
    cv::Vec3b(168, 1, 118),
    cv::Vec3b(168, 1, 121),
    cv::Vec3b(168, 1, 121),
    cv::Vec3b(168, 2, 123),
    cv::Vec3b(167, 3, 126),
    cv::Vec3b(167, 4, 129),
    cv::Vec3b(167, 4, 130),
    cv::Vec3b(166, 5, 132),
    cv::Vec3b(166, 7, 134),
    cv::Vec3b(166, 7, 134),
    cv::Vec3b(165, 7, 136),
    cv::Vec3b(164, 9, 139),
    cv::Vec3b(164, 12, 142),
    cv::Vec3b(163, 13, 143),
    cv::Vec3b(163, 14, 144),
    cv::Vec3b(163, 14, 144),
    cv::Vec3b(161, 16, 147),
    cv::Vec3b(160, 18, 150),
    cv::Vec3b(160, 19, 151),
    cv::Vec3b(158, 21, 154),
    cv::Vec3b(157, 24, 157),
    cv::Vec3b(156, 25, 158),
    cv::Vec3b(156, 25, 158),
    cv::Vec3b(155, 27, 160),
    cv::Vec3b(153, 29, 163),
    cv::Vec3b(151, 31, 165),
    cv::Vec3b(151, 33, 167),
    cv::Vec3b(149, 35, 169),
    cv::Vec3b(147, 37, 172),
    cv::Vec3b(147, 37, 172),
    cv::Vec3b(146, 38, 173),
    cv::Vec3b(144, 40, 175),
    cv::Vec3b(143, 43, 177),
    cv::Vec3b(142, 44, 178),
    cv::Vec3b(140, 46, 181),
    cv::Vec3b(138, 48, 183),
    cv::Vec3b(138, 48, 183),
    cv::Vec3b(136, 51, 185),
    cv::Vec3b(135, 52, 186),
    cv::Vec3b(133, 54, 188),
    cv::Vec3b(131, 56, 190),
    cv::Vec3b(130, 57, 191),
    cv::Vec3b(130, 57, 191),
    cv::Vec3b(128, 61, 194),
    cv::Vec3b(127, 62, 195),
    cv::Vec3b(125, 64, 197),
    cv::Vec3b(123, 66, 199),
    cv::Vec3b(122, 68, 200),
    cv::Vec3b(120, 70, 202),
    cv::Vec3b(120, 70, 202),
    cv::Vec3b(118, 72, 204),
    cv::Vec3b(117, 74, 206),
    cv::Vec3b(115, 77, 208),
    cv::Vec3b(114, 78, 209),
    cv::Vec3b(112, 80, 210),
    cv::Vec3b(110, 82, 212),
    cv::Vec3b(110, 82, 212),
    cv::Vec3b(109, 83, 213),
    cv::Vec3b(108, 86, 215),
    cv::Vec3b(106, 88, 216),
    cv::Vec3b(104, 90, 218),
    cv::Vec3b(103, 91, 219),
    cv::Vec3b(103, 91, 219),
    cv::Vec3b(102, 94, 220),
    cv::Vec3b(100, 96, 222),
    cv::Vec3b(99, 97, 223),
    cv::Vec3b(96, 101, 225),
    cv::Vec3b(96, 102, 226),
    cv::Vec3b(95, 103, 227),
    cv::Vec3b(95, 103, 227),
    cv::Vec3b(92, 107, 229),
    cv::Vec3b(91, 108, 229),
    cv::Vec3b(90, 109, 230),
    cv::Vec3b(88, 113, 232),
    cv::Vec3b(87, 114, 233),
    cv::Vec3b(85, 116, 234),
    cv::Vec3b(85, 116, 234),
    cv::Vec3b(84, 119, 236),
    cv::Vec3b(83, 120, 236),
    cv::Vec3b(81, 123, 237),
    cv::Vec3b(80, 124, 238),
    cv::Vec3b(78, 126, 239),
    cv::Vec3b(77, 129, 240),
    cv::Vec3b(77, 129, 240),
    cv::Vec3b(76, 130, 241),
    cv::Vec3b(74, 133, 242),
    cv::Vec3b(72, 135, 243),
    cv::Vec3b(71, 137, 244),
    cv::Vec3b(71, 138, 244),
    cv::Vec3b(71, 138, 244),
    cv::Vec3b(69, 141, 245),
    cv::Vec3b(68, 142, 246),
    cv::Vec3b(66, 145, 246),
    cv::Vec3b(65, 147, 247),
    cv::Vec3b(64, 149, 248),
    cv::Vec3b(63, 150, 248),
    cv::Vec3b(63, 150, 248),
    cv::Vec3b(61, 153, 249),
    cv::Vec3b(60, 154, 249),
    cv::Vec3b(59, 156, 250),
    cv::Vec3b(58, 159, 250),
    cv::Vec3b(57, 160, 250),
    cv::Vec3b(55, 163, 251),
    cv::Vec3b(55, 163, 251),
    cv::Vec3b(54, 164, 251),
    cv::Vec3b(53, 166, 252),
    cv::Vec3b(52, 169, 252),
    cv::Vec3b(51, 170, 252),
    cv::Vec3b(50, 172, 252),
    cv::Vec3b(50, 172, 252),
    cv::Vec3b(49, 175, 253),
    cv::Vec3b(48, 176, 253),
    cv::Vec3b(47, 178, 253),
    cv::Vec3b(46, 179, 253),
    cv::Vec3b(45, 181, 253),
    cv::Vec3b(45, 182, 253),
    cv::Vec3b(45, 182, 253),
    cv::Vec3b(43, 185, 253),
    cv::Vec3b(43, 187, 253),
    cv::Vec3b(42, 188, 253),
    cv::Vec3b(41, 190, 253),
    cv::Vec3b(41, 192, 253),
    cv::Vec3b(40, 193, 253),
    cv::Vec3b(40, 193, 253),
    cv::Vec3b(40, 195, 253),
    cv::Vec3b(39, 196, 253),
    cv::Vec3b(38, 198, 253),
    cv::Vec3b(38, 199, 252),
    cv::Vec3b(38, 199, 252),
    cv::Vec3b(37, 203, 252),
    cv::Vec3b(37, 203, 252),
    cv::Vec3b(37, 203, 252),
    cv::Vec3b(37, 204, 252),
    cv::Vec3b(37, 206, 252),
    cv::Vec3b(36, 208, 251),
    cv::Vec3b(36, 208, 251),
    cv::Vec3b(36, 208, 251),
    cv::Vec3b(36, 209, 251),
    cv::Vec3b(36, 211, 251),
    cv::Vec3b(36, 213, 250),
    cv::Vec3b(36, 213, 250),
    cv::Vec3b(36, 214, 250),
    cv::Vec3b(36, 216, 250),
    cv::Vec3b(36, 216, 250),
    cv::Vec3b(36, 216, 250),
    cv::Vec3b(36, 217, 249),
    cv::Vec3b(36, 217, 249),
    cv::Vec3b(36, 219, 249),
    cv::Vec3b(36, 219, 249),
    cv::Vec3b(36, 221, 248),
    cv::Vec3b(36, 221, 248),
    cv::Vec3b(36, 223, 248),
    cv::Vec3b(36, 223, 248),
    cv::Vec3b(36, 224, 247),
    cv::Vec3b(36, 224, 247),
    cv::Vec3b(36, 224, 247),
    cv::Vec3b(36, 224, 247),
    cv::Vec3b(37, 226, 247),
    cv::Vec3b(37, 226, 247),
    cv::Vec3b(37, 226, 247),
    cv::Vec3b(37, 228, 246),
    cv::Vec3b(37, 228, 246),
    cv::Vec3b(37, 228, 246),
    cv::Vec3b(37, 228, 246),
    cv::Vec3b(37, 229, 246),
    cv::Vec3b(37, 229, 246),
    cv::Vec3b(37, 229, 246),
    cv::Vec3b(37, 229, 246),
    cv::Vec3b(37, 229, 246),
    cv::Vec3b(37, 229, 246),
    cv::Vec3b(37, 229, 246),
    cv::Vec3b(38, 231, 245),
    cv::Vec3b(38, 231, 245),
    cv::Vec3b(38, 231, 245),
    cv::Vec3b(38, 231, 245),
    cv::Vec3b(38, 231, 245),
    cv::Vec3b(38, 231, 245),
    cv::Vec3b(0, 0, 0)
};
#else
const cv::Vec3b colormap[257] =
{
    cv::Vec3b(0, 0, 0),
    cv::Vec3b(1, 1, 1),
    cv::Vec3b(2, 2, 2),
    cv::Vec3b(3, 3, 3),
    cv::Vec3b(4, 4, 4),
    cv::Vec3b(5, 5, 5),
    cv::Vec3b(6, 6, 6),
    cv::Vec3b(7, 7, 7),
    cv::Vec3b(8, 8, 8),
    cv::Vec3b(9, 9, 9),
    cv::Vec3b(10, 10, 10),
    cv::Vec3b(11, 11, 11),
    cv::Vec3b(12, 12, 12),
    cv::Vec3b(13, 13, 13),
    cv::Vec3b(14, 14, 14),
    cv::Vec3b(15, 15, 15),
    cv::Vec3b(16, 16, 16),
    cv::Vec3b(17, 17, 17),
    cv::Vec3b(18, 18, 18),
    cv::Vec3b(19, 19, 19),
    cv::Vec3b(20, 20, 20),
    cv::Vec3b(21, 21, 21),
    cv::Vec3b(22, 22, 22),
    cv::Vec3b(23, 23, 23),
    cv::Vec3b(24, 24, 24),
    cv::Vec3b(25, 25, 25),
    cv::Vec3b(26, 26, 26),
    cv::Vec3b(27, 27, 27),
    cv::Vec3b(28, 28, 28),
    cv::Vec3b(29, 29, 29),
    cv::Vec3b(30, 30, 30),
    cv::Vec3b(31, 31, 31),
    cv::Vec3b(32, 32, 32),
    cv::Vec3b(33, 33, 33),
    cv::Vec3b(34, 34, 34),
    cv::Vec3b(35, 35, 35),
    cv::Vec3b(36, 36, 36),
    cv::Vec3b(37, 37, 37),
    cv::Vec3b(38, 38, 38),
    cv::Vec3b(39, 39, 39),
    cv::Vec3b(40, 40, 40),
    cv::Vec3b(41, 41, 41),
    cv::Vec3b(42, 42, 42),
    cv::Vec3b(43, 43, 43),
    cv::Vec3b(44, 44, 44),
    cv::Vec3b(45, 45, 45),
    cv::Vec3b(46, 46, 46),
    cv::Vec3b(47, 47, 47),
    cv::Vec3b(48, 48, 48),
    cv::Vec3b(49, 49, 49),
    cv::Vec3b(50, 50, 50),
    cv::Vec3b(51, 51, 51),
    cv::Vec3b(52, 52, 52),
    cv::Vec3b(53, 53, 53),
    cv::Vec3b(54, 54, 54),
    cv::Vec3b(55, 55, 55),
    cv::Vec3b(56, 56, 56),
    cv::Vec3b(57, 57, 57),
    cv::Vec3b(58, 58, 58),
    cv::Vec3b(59, 59, 59),
    cv::Vec3b(60, 60, 60),
    cv::Vec3b(61, 61, 61),
    cv::Vec3b(62, 62, 62),
    cv::Vec3b(63, 63, 63),
    cv::Vec3b(64, 64, 64),
    cv::Vec3b(65, 65, 65),
    cv::Vec3b(66, 66, 66),
    cv::Vec3b(67, 67, 67),
    cv::Vec3b(68, 68, 68),
    cv::Vec3b(69, 69, 69),
    cv::Vec3b(70, 70, 70),
    cv::Vec3b(71, 71, 71),
    cv::Vec3b(72, 72, 72),
    cv::Vec3b(73, 73, 73),
    cv::Vec3b(74, 74, 74),
    cv::Vec3b(75, 75, 75),
    cv::Vec3b(76, 76, 76),
    cv::Vec3b(77, 77, 77),
    cv::Vec3b(78, 78, 78),
    cv::Vec3b(79, 79, 79),
    cv::Vec3b(80, 80, 80),
    cv::Vec3b(81, 81, 81),
    cv::Vec3b(82, 82, 82),
    cv::Vec3b(83, 83, 83),
    cv::Vec3b(84, 84, 84),
    cv::Vec3b(85, 85, 85),
    cv::Vec3b(86, 86, 86),
    cv::Vec3b(87, 87, 87),
    cv::Vec3b(88, 88, 88),
    cv::Vec3b(89, 89, 89),
    cv::Vec3b(90, 90, 90),
    cv::Vec3b(91, 91, 91),
    cv::Vec3b(92, 92, 92),
    cv::Vec3b(93, 93, 93),
    cv::Vec3b(94, 94, 94),
    cv::Vec3b(95, 95, 95),
    cv::Vec3b(96, 96, 96),
    cv::Vec3b(97, 97, 97),
    cv::Vec3b(98, 98, 98),
    cv::Vec3b(99, 99, 99),
    cv::Vec3b(100, 100, 100),
    cv::Vec3b(101, 101, 101),
    cv::Vec3b(102, 102, 102),
    cv::Vec3b(103, 103, 103),
    cv::Vec3b(104, 104, 104),
    cv::Vec3b(105, 105, 105),
    cv::Vec3b(106, 106, 106),
    cv::Vec3b(107, 107, 107),
    cv::Vec3b(108, 108, 108),
    cv::Vec3b(109, 109, 109),
    cv::Vec3b(110, 110, 110),
    cv::Vec3b(111, 111, 111),
    cv::Vec3b(112, 112, 112),
    cv::Vec3b(113, 113, 113),
    cv::Vec3b(114, 114, 114),
    cv::Vec3b(115, 115, 115),
    cv::Vec3b(116, 116, 116),
    cv::Vec3b(117, 117, 117),
    cv::Vec3b(118, 118, 118),
    cv::Vec3b(119, 119, 119),
    cv::Vec3b(120, 120, 120),
    cv::Vec3b(121, 121, 121),
    cv::Vec3b(122, 122, 122),
    cv::Vec3b(123, 123, 123),
    cv::Vec3b(124, 124, 124),
    cv::Vec3b(125, 125, 125),
    cv::Vec3b(126, 126, 126),
    cv::Vec3b(127, 127, 127),
    cv::Vec3b(128, 128, 128),
    cv::Vec3b(129, 129, 129),
    cv::Vec3b(130, 130, 130),
    cv::Vec3b(131, 131, 131),
    cv::Vec3b(132, 132, 132),
    cv::Vec3b(133, 133, 133),
    cv::Vec3b(134, 134, 134),
    cv::Vec3b(135, 135, 135),
    cv::Vec3b(136, 136, 136),
    cv::Vec3b(137, 137, 137),
    cv::Vec3b(138, 138, 138),
    cv::Vec3b(139, 139, 139),
    cv::Vec3b(140, 140, 140),
    cv::Vec3b(141, 141, 141),
    cv::Vec3b(142, 142, 142),
    cv::Vec3b(143, 143, 143),
    cv::Vec3b(144, 144, 144),
    cv::Vec3b(145, 145, 145),
    cv::Vec3b(146, 146, 146),
    cv::Vec3b(147, 147, 147),
    cv::Vec3b(148, 148, 148),
    cv::Vec3b(149, 149, 149),
    cv::Vec3b(150, 150, 150),
    cv::Vec3b(151, 151, 151),
    cv::Vec3b(152, 152, 152),
    cv::Vec3b(153, 153, 153),
    cv::Vec3b(154, 154, 154),
    cv::Vec3b(155, 155, 155),
    cv::Vec3b(156, 156, 156),
    cv::Vec3b(157, 157, 157),
    cv::Vec3b(158, 158, 158),
    cv::Vec3b(159, 159, 159),
    cv::Vec3b(160, 160, 160),
    cv::Vec3b(161, 161, 161),
    cv::Vec3b(162, 162, 162),
    cv::Vec3b(163, 163, 163),
    cv::Vec3b(164, 164, 164),
    cv::Vec3b(165, 165, 165),
    cv::Vec3b(166, 166, 166),
    cv::Vec3b(167, 167, 167),
    cv::Vec3b(168, 168, 168),
    cv::Vec3b(169, 169, 169),
    cv::Vec3b(170, 170, 170),
    cv::Vec3b(171, 171, 171),
    cv::Vec3b(172, 172, 172),
    cv::Vec3b(173, 173, 173),
    cv::Vec3b(174, 174, 174),
    cv::Vec3b(175, 175, 175),
    cv::Vec3b(176, 176, 176),
    cv::Vec3b(177, 177, 177),
    cv::Vec3b(178, 178, 178),
    cv::Vec3b(179, 179, 179),
    cv::Vec3b(180, 180, 180),
    cv::Vec3b(181, 181, 181),
    cv::Vec3b(182, 182, 182),
    cv::Vec3b(183, 183, 183),
    cv::Vec3b(184, 184, 184),
    cv::Vec3b(185, 185, 185),
    cv::Vec3b(186, 186, 186),
    cv::Vec3b(187, 187, 187),
    cv::Vec3b(188, 188, 188),
    cv::Vec3b(189, 189, 189),
    cv::Vec3b(190, 190, 190),
    cv::Vec3b(191, 191, 191),
    cv::Vec3b(192, 192, 192),
    cv::Vec3b(193, 193, 193),
    cv::Vec3b(194, 194, 194),
    cv::Vec3b(195, 195, 195),
    cv::Vec3b(196, 196, 196),
    cv::Vec3b(197, 197, 197),
    cv::Vec3b(198, 198, 198),
    cv::Vec3b(199, 199, 199),
    cv::Vec3b(200, 200, 200),
    cv::Vec3b(201, 201, 201),
    cv::Vec3b(202, 202, 202),
    cv::Vec3b(203, 203, 203),
    cv::Vec3b(204, 204, 204),
    cv::Vec3b(205, 205, 205),
    cv::Vec3b(206, 206, 206),
    cv::Vec3b(207, 207, 207),
    cv::Vec3b(208, 208, 208),
    cv::Vec3b(209, 209, 209),
    cv::Vec3b(210, 210, 210),
    cv::Vec3b(211, 211, 211),
    cv::Vec3b(212, 212, 212),
    cv::Vec3b(213, 213, 213),
    cv::Vec3b(214, 214, 214),
    cv::Vec3b(215, 215, 215),
    cv::Vec3b(216, 216, 216),
    cv::Vec3b(217, 217, 217),
    cv::Vec3b(218, 218, 218),
    cv::Vec3b(219, 219, 219),
    cv::Vec3b(220, 220, 220),
    cv::Vec3b(221, 221, 221),
    cv::Vec3b(222, 222, 222),
    cv::Vec3b(223, 223, 223),
    cv::Vec3b(224, 224, 224),
    cv::Vec3b(225, 225, 225),
    cv::Vec3b(226, 226, 226),
    cv::Vec3b(227, 227, 227),
    cv::Vec3b(228, 228, 228),
    cv::Vec3b(229, 229, 229),
    cv::Vec3b(230, 230, 230),
    cv::Vec3b(231, 231, 231),
    cv::Vec3b(232, 232, 232),
    cv::Vec3b(233, 233, 233),
    cv::Vec3b(234, 234, 234),
    cv::Vec3b(235, 235, 235),
    cv::Vec3b(236, 236, 236),
    cv::Vec3b(237, 237, 237),
    cv::Vec3b(238, 238, 238),
    cv::Vec3b(239, 239, 239),
    cv::Vec3b(240, 240, 240),
    cv::Vec3b(241, 241, 241),
    cv::Vec3b(242, 242, 242),
    cv::Vec3b(243, 243, 243),
    cv::Vec3b(244, 244, 244),
    cv::Vec3b(245, 245, 245),
    cv::Vec3b(246, 246, 246),
    cv::Vec3b(247, 247, 247),
    cv::Vec3b(248, 248, 248),
    cv::Vec3b(249, 249, 249),
    cv::Vec3b(250, 250, 250),
    cv::Vec3b(251, 251, 251),
    cv::Vec3b(252, 252, 252),
    cv::Vec3b(253, 253, 253),
    cv::Vec3b(254, 254, 254),
    cv::Vec3b(255, 255, 255),
    cv::Vec3b(0, 0, 0)
};
#endif

// input 0..255, returns the corresponding color of the colormap
cv::Vec3b color(int iteration)
{
    return colormap[iteration];
}